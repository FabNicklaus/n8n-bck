{"createdAt":"2025-02-28T14:27:38.889Z","updatedAt":"2025-02-28T14:39:46.000Z","id":"2jSTjDey1QdulIx7","name":"Bck workflows to Github (subworkflow)","active":false,"nodes":[{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"5080cfd0-b02a-4e96-8aa4-44022095c712","name":"Return","type":"n8n-nodes-base.set","position":[1260,240],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"86a9316c-2699-4b36-ba89-bf91b3ec2056","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[220,120],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"b36cce17-9998-418e-9065-58fee445c755","name":"If file too large","type":"n8n-nodes-base.if","position":[-20,140],"typeVersion":2},{"parameters":{},"id":"4c736b99-1cf9-4f1d-8a38-638a6ead6112","name":"Merge Items","type":"n8n-nodes-base.merge","position":[-20,400],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"f66923e5-92cf-46bb-b16e-caf194f12eb7","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[180,400],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"5293587b-a2f5-4974-b900-264f373474bc","name":"Check Status","type":"n8n-nodes-base.switch","position":[580,400],"typeVersion":1},{"parameters":{},"id":"f6c82643-6ca5-45ea-9da9-629859df421c","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[800,240],"typeVersion":1},{"parameters":{},"id":"6e4d5fa7-9bd6-4012-9de3-51a783441576","name":"File is different","type":"n8n-nodes-base.noOp","position":[800,400],"typeVersion":1},{"parameters":{},"id":"e27a289e-6ae4-48d9-8838-e647a0dec5fc","name":"File is new","type":"n8n-nodes-base.noOp","position":[800,600],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"db52ed55-6600-475e-ac40-cbd463299c66","name":"Create new file","type":"n8n-nodes-base.github","position":[1020,600],"typeVersion":1,"credentials":{"githubApi":{"id":"d8Aca1Kz6HhErvT5","name":"GitHub account"}}},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"a81a2bf7-cad8-4c2a-925e-0ddcf983940a","name":"Edit existing file","type":"n8n-nodes-base.github","position":[1020,400],"typeVersion":1,"credentials":{"githubApi":{"id":"d8Aca1Kz6HhErvT5","name":"GitHub account"}}},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"6f48265e-58d6-491c-a246-7103057a11fb","name":"Create sub path","type":"n8n-nodes-base.set","position":[380,400],"typeVersion":3.3},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"4bc6d678-973d-4afa-a189-55e7d85dbdad","name":"Get file data","type":"n8n-nodes-base.github","position":[-220,140],"typeVersion":1,"alwaysOutputData":true,"credentials":{"githubApi":{"id":"d8Aca1Kz6HhErvT5","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"={{ $vars.repo_owner }}"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"={{ $vars.repo_name }}"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"={{ $vars.repo_path }}"}]},"includeOtherFields":true,"options":{}},"id":"64d480b5-48ee-42b9-ac45-149fd6a8c2f6","name":"Config","type":"n8n-nodes-base.set","position":[-220,420],"typeVersion":3.4},{"parameters":{"inputSource":"passthrough"},"id":"c055762a-8fe7-4141-a639-df2372f30060","typeVersion":1.1,"name":"When Executed by Another Workflow","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-460,280]},{"parameters":{"content":"## Subworkflow","height":732,"width":1991,"color":6},"id":"4443db35-f262-4919-adc7-da9e07090162","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-500,80],"typeVersion":1}],"connections":{"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Config":{"main":[[{"node":"Merge Items","type":"main","index":1}]]},"When Executed by Another Workflow":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Config","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"4a9a07ac-e497-4f2d-843b-89541e25b49e","triggerCount":0,"tags":[]}