{"createdAt":"2025-02-12T00:48:44.271Z","updatedAt":"2025-02-12T01:32:03.000Z","id":"kyBrlhCNTnjln0o0","name":"Invoice data extraction with LlamaParse and OpenAI","active":false,"nodes":[{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-3.5-turbo-1106","cachedResultName":"gpt-3.5-turbo-1106"},"options":{"temperature":0}},"id":"c5d88db9-56b9-4057-a359-174598382f2e","name":"OpenAI Model","type":"@n8n/n8n-nodes-langchain.lmOpenAi","position":[-160,300],"typeVersion":1},{"parameters":{"jsonSchema":"{\n  \"Invoice date\": { \"type\": \"date\" },\n  \"invoice number\": { \"type\": \"string\" },\n  \"Purchase order number\": { \"type\": \"string\" },\n  \"Supplier name\": { \"type\": \"string\" },\n  \"Supplier address\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"address 1\": { \"type\": \"string\" },\n      \"address 2\": { \"type\": \"string\" },\n      \"city\": { \"type\": \"string\" },\n      \"postcode\": { \"type\": \"string\" }\n    }\n  },\n  \"Supplier VAT identification number\": { \"type\": \"string\" },\n  \"Customer name\": { \"type\": \"string\" },\n  \"Customer address\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"address 1\": { \"type\": \"string\" },\n      \"address 2\": { \"type\": \"string\" },\n      \"city\": { \"type\": \"string\" },\n      \"postcode\": { \"type\": \"string\" }\n    }\n  },\n  \"Customer VAT identification number\": { \"type\": \"string\" }, \n  \"Shipping addresses\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"address 1\": { \"type\": \"string\" },\n        \"address 2\": { \"type\": \"string\" },\n        \"city\": { \"type\": \"string\" },\n        \"postcode\": { \"type\": \"string\" }\n      }\n    }\n  },\n  \"Line items\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"price\": \"number\",\n      \"discount\": \"number\"\n    }\n  },\n  \"Subtotal without VAT\": { \"type\": \"number\" },\n  \"Subtotal with VAT\": { \"type\": \"number\" },\n  \"Total price\": { \"type\": \"number\" }\n}"},"id":"54a0de2f-65c7-4c9a-baca-070dec8c7ecc","name":"Structured Output Parser","type":"@n8n/n8n-nodes-langchain.outputParserStructured","position":[20,300],"typeVersion":1.1},{"parameters":{"method":"POST","url":"https://api.cloud.llamaindex.ai/api/parsing/upload","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"accept","value":"application/json"}]},"sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"file","inputDataFieldName":"=attachment_0"}]},"options":{}},"id":"ab85094c-5390-49ce-b6eb-ca8deb8316ae","name":"Upload to LlamaParse","type":"n8n-nodes-base.httpRequest","position":[-960,240],"typeVersion":4.2},{"parameters":{"content":"## 2. Advanced PDF Processing with LlamaParse\n[Read more about using HTTP Requests](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/)\n\nLlamaIndex's LlamaCloud is a cloud-based service that allows you to upload,\nparse, and index document. LlamaParse is a tool offered by LlamaCloud\nto parse for complex PDFs with embedded objects ie PDF Tables and figures.\n\nAt time of writing, you can parse 1000 pdfs/day with LlamaCloud's free plan\nby signing up at [https://cloud.llamaindex.ai/](https://cloud.llamaindex.ai/?ref=n8n.io).","height":623.4951418211454,"width":785.9525375246163,"color":7},"id":"5a7616dc-85a2-41d9-b841-e6e5858b0d84","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-1040,-60],"typeVersion":1},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"simple":false,"filters":{"q":"has:attachment","sender":"invoices@paypal.com"},"options":{"downloadAttachments":true}},"id":"4ce9bc5c-d24a-46a4-ab69-0c86f73ed012","name":"Receiving Invoices","type":"n8n-nodes-base.gmailTrigger","position":[-1800,220],"typeVersion":1},{"parameters":{"operation":"append","documentId":{"__rl":true,"mode":"list","value":"1omHDl1jpjHyrtga2ZHBddUkbkdatEr1ga9vHc4fQ1pI","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1omHDl1jpjHyrtga2ZHBddUkbkdatEr1ga9vHc4fQ1pI/edit?usp=drivesdk","cachedResultName":"Invoice Reconciliation"},"sheetName":{"__rl":true,"mode":"id","value":"gid=0"},"columns":{"value":{},"schema":[{"id":"Invoice date","type":"string","display":true,"removed":false,"required":false,"displayName":"Invoice date","defaultMatch":false,"canBeUsedToMatch":true},{"id":"invoice number","type":"string","display":true,"removed":false,"required":false,"displayName":"invoice number","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Purchase order number","type":"string","display":true,"removed":false,"required":false,"displayName":"Purchase order number","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Supplier name","type":"string","display":true,"removed":false,"required":false,"displayName":"Supplier name","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Supplier address","type":"string","display":true,"removed":false,"required":false,"displayName":"Supplier address","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Supplier VAT identification number","type":"string","display":true,"removed":false,"required":false,"displayName":"Supplier VAT identification number","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Customer name","type":"string","display":true,"removed":false,"required":false,"displayName":"Customer name","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Customer address","type":"string","display":true,"removed":false,"required":false,"displayName":"Customer address","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Customer VAT identification number","type":"string","display":true,"removed":false,"required":false,"displayName":"Customer VAT identification number","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Shipping addresses","type":"string","display":true,"removed":false,"required":false,"displayName":"Shipping addresses","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Line items","type":"string","display":true,"removed":false,"required":false,"displayName":"Line items","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Subtotal without VAT","type":"string","display":true,"removed":false,"required":false,"displayName":"Subtotal without VAT","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Subtotal with VAT","type":"string","display":true,"removed":false,"required":false,"displayName":"Subtotal with VAT","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Total price","type":"string","display":true,"removed":false,"required":false,"displayName":"Total price","defaultMatch":false,"canBeUsedToMatch":true}],"mappingMode":"autoMapInputData","matchingColumns":["output"]},"options":{}},"id":"0ad61ca1-d212-4f9d-b847-68e4fd7a0961","name":"Append to Reconciliation Sheet","type":"n8n-nodes-base.googleSheets","position":[380,140],"typeVersion":4.3},{"parameters":{"url":"=https://api.cloud.llamaindex.ai/api/parsing/job/{{ $json.id }}","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"accept","value":"application/json"}]},"options":{}},"id":"2b907f5b-63c4-4953-95f6-a8140305e812","name":"Get Processing Status","type":"n8n-nodes-base.httpRequest","position":[-780,240],"typeVersion":4.2},{"parameters":{"amount":1},"id":"0390e860-b51f-4824-8bb6-491baf6386b6","name":"Wait to stay within service limits","type":"n8n-nodes-base.wait","position":[-460,380],"webhookId":"17a96ed6-b5ff-47bb-a8a2-39c1eb40185a","typeVersion":1.1},{"parameters":{"rules":{"values":[{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"300fce8c-b19a-4d0c-86e8-f62853c70ce2","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.status }}","rightValue":"SUCCESS"}]},"renameOutput":true,"outputKey":"SUCCESS"},{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"e6058aa0-a3e2-4ce3-9bed-6ff41a5be052","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.status }}","rightValue":"ERROR"}]},"renameOutput":true,"outputKey":"ERROR"},{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"ceb6338f-4261-40ac-be11-91f61c7302ba","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.status }}","rightValue":"CANCELED"}]},"renameOutput":true,"outputKey":"CANCELED"},{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"0fa97d86-432a-409a-917e-5f1a002b1ab9","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.status }}","rightValue":"PENDING"}]},"renameOutput":true,"outputKey":"PENDING"}]},"options":{"allMatchingOutputs":true}},"id":"95039e57-2aba-459e-b71a-3ac6d8c706cf","name":"Is Job Ready?","type":"n8n-nodes-base.switch","position":[-620,240],"typeVersion":3},{"parameters":{"content":"## 1. Watch for Invoice Emails\n[Read more about Gmail Triggers](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger)\n\nThe Gmail node can watch for all incoming messages and filter based on a condition. We'll set our Gmail node to wait for:\n* a message from particular email address.\n* having an attachment which should be the invoice PDF\n* not having a label \"invoice synced\", which is what we use to avoid duplicate processing.","height":709.5781339256318,"width":808.8727491350096,"color":7},"id":"85df870a-f6df-419b-aa21-e02d818df44c","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-1880,-60],"typeVersion":1},{"parameters":{"content":"## 3. Use LLMs to Extract Values from Data\n[Read more about Basic LLM Chain](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm/)\n\nLarge language models are perfect for data extraction tasks as they can work across a range of document layouts without human intervention. The extracted data can then be sent to a variety of datastores such as spreadsheets, accounting systems and/or CRMs.\n\n**Tip:** The \"Structured Output Parser\" ensures the AI output can be\ninserted to our spreadsheet without additional clean up and/or formatting. ","height":656.5014186128178,"width":805.0578351924228,"color":7},"id":"9b4fe552-1b7f-49c1-a69f-ad0a2a282bb1","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[-220,-120],"typeVersion":1},{"parameters":{"content":"### 🙋‍♂️ Why not just use the built-in PDF convertor?\nA common issue with PDF-to-text convertors are that they ignore important data structures like tables. These structures can be important for data extraction. For example, being able to distinguish between seperate line items in an invoice.","height":154.49585536070904,"width":394.15089838126653,"color":5},"id":"8beb3058-e644-4bbd-a5c9-327815c49ad1","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[-640,600],"typeVersion":1},{"parameters":{"content":"## 4. Add Label to Avoid Duplication\n[Read more about working with Gmail](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.gmail/)\n\nTo finish off the workflow, we'll add the \"invoice synced\" label to the original invoice email to flag that the extraction was successful. This can be useful if working with a shared inbox and for quality control purposes later.","height":440.3435768155051,"width":362.3535748101346,"color":7},"id":"d6804f72-24cb-4c92-bc68-91106dd6338d","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[620,-40],"typeVersion":1},{"parameters":{"content":"## Try Me Out!\n\n**This workflow does the following:**\n* Waits for email invoices with PDF attachments.\n* Uses the LlamaParse service to convert the invoice PDF into a markdown file.\n* Uses a LLM to extract invoice data from the Markdown file.\n* Exports the extracted data to a Google Sheet.\n\n### Follow along with the blog here\nhttps://blog.n8n.io/how-to-extract-data-from-pdf-to-excel-spreadsheet-advance-parsing-with-n8n-io-and-llamaparse/\n\n### Good to know\n* You'll need to create the label \"invoice synced\" in gmail before using this workflow.\n\n### Need Help?\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\n\nHappy Hacking!","height":573.2443601155958,"width":360.0244620907562},"id":"4a3cc470-61ed-4691-ab83-2cf0b9e21f49","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[-2280,-60],"typeVersion":1},{"parameters":{"operation":"addLabels","messageId":"={{ $('Receiving Invoices').item.json.id }}","labelIds":["Label_5511644430826409825"]},"id":"4ff47222-683b-44fc-8cc1-10a7a9526614","name":"Add \"invoice synced\" Label","type":"n8n-nodes-base.gmail","position":[740,220],"typeVersion":2.1,"webhookId":"ede3f5f2-dbbe-4a7e-ab9c-b58bb8679610"},{"parameters":{"url":"=https://api.cloud.llamaindex.ai/api/parsing/job/{{ $json.id }}/result/markdown","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","options":{"redirect":{"redirect":{}}}},"id":"3d0009e6-0cc3-4cbd-8b8f-35f10b72fe08","name":"Get Parsed Invoice Data","type":"n8n-nodes-base.httpRequest","position":[-420,100],"typeVersion":4.2},{"parameters":{"mode":"raw","jsonOutput":"={{ $json.output }}","options":{}},"id":"782188b9-ac36-47a2-94db-e0aabc66e88a","name":"Map Output","type":"n8n-nodes-base.set","position":[180,140],"typeVersion":3.3},{"parameters":{"promptType":"define","text":"=Given the following invoice in the <invoice> xml tags, extract the following information as listed below.\nIf you cannot the information for a specific item, then leave blank and skip to the next. \n\n* Invoice date\n* invoice number\n* Purchase order number\n* Supplier name\n* Supplier address\n* Supplier VAT identification number\n* Customer name\n* Customer address\n* Customer VAT identification number\n* Shipping addresses\n* Line items, including a description of the goods or services rendered\n* Price with and without VAT\n* Total price\n\n<invoice>{{ $json.markdown }}</invoice>","hasOutputParser":true},"id":"dd2cbd1a-e369-4709-827c-cf44d9533918","name":"Apply Data Extraction Rules","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[-160,140],"typeVersion":1.4},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"e5649a2b-6e12-4cc4-8001-4639cc9cc2c2","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $input.item.binary.attachment_0.mimeType }}","rightValue":"application/pdf"},{"id":"4c57ab9b-b11c-455a-a63d-daf48418b06e","operator":{"type":"array","operation":"notContains","rightType":"any"},"leftValue":"={{ $json.labels }}","rightValue":"invoice synced"}]},"options":{}},"id":"754885a8-fa8b-4bf5-b39e-53bb65394a6e","name":"Should Process Email?","type":"n8n-nodes-base.if","position":[-1240,220],"typeVersion":2},{"parameters":{"fieldToSplitOut":"labelIds","options":{}},"id":"439c245b-fae2-497c-9133-5717c0066615","name":"Split Out Labels","type":"n8n-nodes-base.splitOut","position":[-1600,220],"typeVersion":1},{"parameters":{"resource":"label","operation":"get","labelId":"={{ $json.labelIds }}"},"id":"06355141-5841-4aac-81c5-5cd279d92661","name":"Get Labels Names","type":"n8n-nodes-base.gmail","position":[-1600,360],"typeVersion":2.1,"webhookId":"739a0fe1-047e-4583-bdab-e4ddecd0a15e"},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"name","renameField":true,"outputFieldName":"labels"}]},"options":{}},"id":"65fa0806-8055-4edd-b869-37037e3ae18d","name":"Combine Label Names","type":"n8n-nodes-base.aggregate","position":[-1600,500],"typeVersion":1},{"parameters":{"mode":"combine","combinationMode":"multiplex","options":{}},"id":"00449a18-84e7-4a56-9e59-dda45e8e2c2c","name":"Email with Label Names","type":"n8n-nodes-base.merge","position":[-1420,220],"typeVersion":2.1},{"parameters":{"content":"\n\n\n\n\n\n\n\n\n\n\n\n**Need more attributes?**\nChange it here!","height":213.73043662572252,"width":192.26896179623753},"id":"a48b9f8e-e30b-4626-b963-6c8d1300a98b","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[40,360],"typeVersion":1},{"parameters":{"content":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🚨**Required**\n* Set Your Google Sheet URL here\n* Set the Name of your Sheet\n\n\n**Don't use GSheets?**\nSwap this for Excel, Airtable or a Database!","height":397.0641952938746,"width":258.29345180972877},"id":"b15d2087-8ea9-4ae2-a104-73e2dc3ba9ee","name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","position":[380,200],"typeVersion":1},{"parameters":{"content":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🚨**Required**\n* Change the email filters here!","height":274.6295678979021,"width":174.50671517518518},"id":"e262fd2d-d936-4f2c-94d6-a1cf99fea328","name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","position":[-1760,280],"typeVersion":1}],"connections":{"Map Output":{"main":[[{"node":"Append to Reconciliation Sheet","type":"main","index":0}]]},"OpenAI Model":{"ai_languageModel":[[{"node":"Apply Data Extraction Rules","type":"ai_languageModel","index":0}]]},"Is Job Ready?":{"main":[[{"node":"Get Parsed Invoice Data","type":"main","index":0}],[],[],[{"node":"Wait to stay within service limits","type":"main","index":0}]]},"Get Labels Names":{"main":[[{"node":"Combine Label Names","type":"main","index":0}]]},"Split Out Labels":{"main":[[{"node":"Get Labels Names","type":"main","index":0}]]},"Receiving Invoices":{"main":[[{"node":"Split Out Labels","type":"main","index":0},{"node":"Email with Label Names","type":"main","index":0}]]},"Combine Label Names":{"main":[[{"node":"Email with Label Names","type":"main","index":1}]]},"Upload to LlamaParse":{"main":[[{"node":"Get Processing Status","type":"main","index":0}]]},"Get Processing Status":{"main":[[{"node":"Is Job Ready?","type":"main","index":0}]]},"Should Process Email?":{"main":[[{"node":"Upload to LlamaParse","type":"main","index":0}]]},"Email with Label Names":{"main":[[{"node":"Should Process Email?","type":"main","index":0}]]},"Get Parsed Invoice Data":{"main":[[{"node":"Apply Data Extraction Rules","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"Apply Data Extraction Rules","type":"ai_outputParser","index":0}]]},"Apply Data Extraction Rules":{"main":[[{"node":"Map Output","type":"main","index":0}]]},"Append to Reconciliation Sheet":{"main":[[{"node":"Add \"invoice synced\" Label","type":"main","index":0}]]},"Wait to stay within service limits":{"main":[[{"node":"Get Processing Status","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"abf72b34-0ee8-436a-bd84-f4abeef319f8","triggerCount":0,"tags":[{"createdAt":"2025-02-12T00:06:31.183Z","updatedAt":"2025-02-16T12:09:52.918Z","id":"RAEtntqG5GvQKAMI","name":"AD USO INTERNO"},{"createdAt":"2025-02-11T23:59:41.483Z","updatedAt":"2025-02-14T16:18:26.979Z","id":"dzhL8PxGOvRSKz2J","name":"ANCORA IN TEST"}]}