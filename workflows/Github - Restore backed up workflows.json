{"createdAt":"2025-02-17T22:29:31.464Z","updatedAt":"2025-02-28T15:28:00.000Z","id":"GUXatLy1rA665slP","name":"Github - Restore backed up workflows","active":false,"nodes":[{"parameters":{},"id":"5a877310-d9f1-4c53-8551-a58334d0168c","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[-500,420],"typeVersion":1},{"parameters":{"values":{"string":[{"name":"repo.owner","value":"Fabnicklaus"},{"name":"repo.name","value":"N8N-repo"},{"name":"repo.path","value":"workflows"},{"name":"workflow-name","value":"kQqdPNM7U80IaCWM"}]},"options":{}},"id":"ac61c86b-f56a-4a3e-8f5a-1101ca3aa010","name":"Globals","type":"n8n-nodes-base.set","position":[-300,320],"typeVersion":1},{"parameters":{"content":"## Workflow - Restore Backups\nThis workflow will restore backed-up workflows from Github. \nIt is launch by testing the workflow\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder where your workflows are saved, within the repository.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows","height":464.79920462713443,"width":389.78906250000017,"color":2},"id":"566a5555-b438-4728-a08b-fc9b4e22fe98","name":"Note","type":"n8n-nodes-base.stickyNote","position":[-940,240],"typeVersion":1},{"parameters":{},"id":"74674942-26c7-4238-9ef0-185dafa21da6","name":"Workflow name already exists","type":"n8n-nodes-base.noOp","position":[1380,520],"typeVersion":1},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"063d51c7-0b7a-48a4-82b3-76b370fc4265","operator":{"type":"string","operation":"exists","singleValue":true},"leftValue":"={{ $('Merge Github and n8n workflows - Keep only non existing workflows based on the name').item.json.name }}","rightValue":""}]},"options":{}},"id":"572f17f4-6382-4851-9516-dc3cd3da18a1","name":"If workflow already exists","type":"n8n-nodes-base.if","position":[1060,400],"typeVersion":2},{"parameters":{"assignments":{"assignments":[{"id":"6be8c184-8fb7-47a9-ad42-d0dc3db1eea4","name":"name","type":"string","value":"={{ $json.name }}"}]},"options":{}},"id":"dccf0b8e-472e-42fd-a9d6-cb79109ee07a","name":"Set n8n existing workflows names","type":"n8n-nodes-base.set","position":[520,520],"typeVersion":3.3},{"parameters":{"resource":"file","operation":"list","owner":{"__rl":true,"mode":"name","value":"={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}"},"repository":{"__rl":true,"mode":"name","value":"={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}"},"filePath":"={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}"},"id":"954f082c-8217-4452-8d1b-a4b302ace03f","name":"GitHub - get all files","type":"n8n-nodes-base.github","position":[-80,180],"typeVersion":1,"credentials":{"githubApi":{"id":"d8Aca1Kz6HhErvT5","name":"GitHub account"}}},{"parameters":{"filters":{},"requestOptions":{}},"id":"2b4e8335-b9e5-4ed8-80b4-20bd203906c2","name":"n8n - get all workflows","type":"n8n-nodes-base.n8n","position":[-300,520],"typeVersion":1,"credentials":{"n8nApi":{"id":"e0P2yj9nA0voMJCS","name":"n8n account"}}},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"name","value":"={{ $json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $json.repo.name }}"},"filePath":"={{ $json.path }}","asBinaryProperty":false,"additionalParameters":{}},"id":"05c0dec7-c143-4aff-ac60-29d7614316fd","name":"GitHub - get each file","type":"n8n-nodes-base.github","position":[420,300],"typeVersion":1,"credentials":{"githubApi":{"id":"d8Aca1Kz6HhErvT5","name":"GitHub account"}}},{"parameters":{"assignments":{"assignments":[{"id":"714b0cfd-9f06-4e2f-b73d-30ef39dc40e3","name":"content","type":"string","value":"={{ $json.content.base64Decode() }}"},{"id":"6f48ed58-d55a-4ee4-8cf2-373941aaa341","name":"name","type":"string","value":"={{ $json.name.replace(\".json\", \"\") }}"}]},"options":{}},"id":"fbdf75d6-d736-40bd-86e9-ab2e51d2450f","name":"Set name and content","type":"n8n-nodes-base.set","position":[600,300],"typeVersion":3.3},{"parameters":{"operation":"create","workflowObject":"={{ $('Set name and content').item.json.content }}","requestOptions":{}},"id":"bc4cf07d-5b66-4ee4-a6aa-7d42e6fdee27","name":"n8n - create workflow","type":"n8n-nodes-base.n8n","position":[1380,300],"typeVersion":1,"credentials":{"n8nApi":{"id":"e0P2yj9nA0voMJCS","name":"n8n account"}}},{"parameters":{"content":"## Get all Github files\n1. List all the files from your repository\n2. Get each file as a JSON. \n3. The content, retrieved as base64, is converted in the \"Set Name and Content\" node\n\n\nThe \"Set Name and Content\" node creates a list of workflows with name and content, in order to compare it with the existing n8n workflows in the workspace.","height":479,"width":981,"color":2},"id":"42e4698d-7b0b-4921-8db1-36e46ca8a8f6","name":"Note1","type":"n8n-nodes-base.stickyNote","position":[-160,-20],"typeVersion":1},{"parameters":{"mode":"combine","combinationMode":"multiplex","options":{}},"id":"d1202bb2-071f-478c-a430-ad8b155ab868","name":"Merge globals and files","type":"n8n-nodes-base.merge","position":[80,300],"typeVersion":2.1},{"parameters":{"mode":"combine","mergeByFields":{"values":[{"field1":"name","field2":"name"}]},"joinMode":"keepNonMatches","outputDataFrom":"input1","options":{}},"id":"6c89ac78-92c1-4e3f-96f8-f672ec19cebd","name":"Merge Github and n8n workflows - Keep only non existing workflows based on the name","type":"n8n-nodes-base.merge","position":[840,400],"typeVersion":2.1,"alwaysOutputData":true},{"parameters":{"content":"## Merge Github and n8n workflows\n\nHere, we only keep the workflows from Github that doesn't already exist in n8n workspace, based on the name","height":196.65095879641083,"width":260.44696745223945,"color":2},"id":"9d5e05f9-acfc-4052-b240-b2beacc1ff2d","name":"Note2","type":"n8n-nodes-base.stickyNote","position":[760,580],"typeVersion":1},{"parameters":{"content":"## Create n8n workflow\n\nCreate the n8n workflow using:\n- Content saved in Github\n- Name of the file in Github\n\n\nIf the workflow name already exist in n8n, then the workflow is not created - to avoid duplicates.","height":237.66186698228626,"width":344.0461264465236,"color":2},"id":"4713d88f-127a-40da-a62d-673b74405c5f","name":"Note3","type":"n8n-nodes-base.stickyNote","position":[1560,360],"typeVersion":1},{"parameters":{"content":"## Get existing n8n workflows\n\n1. Get all workflows\n2. Prepare a list of workflows in order to compare it with the workflows saved in the Github repo.","height":182.45487519360773,"width":378.7476641422645,"color":2},"id":"edccc1b0-996a-461b-94c9-8aff9b08bf7c","name":"Note4","type":"n8n-nodes-base.stickyNote","position":[-80,620],"typeVersion":1},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"4a14bf76-2863-4e47-874a-376a4e5dae97","leftValue":"={{ $json.path }}","rightValue":"={{ $('Globals').item.json.repo.path }}/{{ $json['workflow-name'] }}.json","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[240,300],"id":"4a02cfbb-5b44-4f3e-a816-150c107f6eb2","name":"Filter"}],"connections":{"Globals":{"main":[[{"node":"GitHub - get all files","type":"main","index":0},{"node":"Merge globals and files","type":"main","index":1}]]},"Set name and content":{"main":[[{"node":"Merge Github and n8n workflows - Keep only non existing workflows based on the name","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"Globals","type":"main","index":0},{"node":"n8n - get all workflows","type":"main","index":0}]]},"GitHub - get all files":{"main":[[{"node":"Merge globals and files","type":"main","index":0}]]},"GitHub - get each file":{"main":[[{"node":"Set name and content","type":"main","index":0}]]},"Merge globals and files":{"main":[[{"node":"Filter","type":"main","index":0}]]},"n8n - get all workflows":{"main":[[{"node":"Set n8n existing workflows names","type":"main","index":0}]]},"If workflow already exists":{"main":[[{"node":"n8n - create workflow","type":"main","index":0}],[{"node":"Workflow name already exists","type":"main","index":0}]]},"Set n8n existing workflows names":{"main":[[{"node":"Merge Github and n8n workflows - Keep only non existing workflows based on the name","type":"main","index":1}]]},"Merge Github and n8n workflows - Keep only non existing workflows based on the name":{"main":[[{"node":"If workflow already exists","type":"main","index":0}]]},"Filter":{"main":[[{"node":"GitHub - get each file","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"e6f29588-4a1f-460b-be2a-23a743d5001c","triggerCount":0,"tags":[{"createdAt":"2025-02-12T00:06:31.183Z","updatedAt":"2025-02-16T12:09:52.918Z","id":"RAEtntqG5GvQKAMI","name":"AD USO INTERNO"},{"createdAt":"2025-02-11T23:59:41.483Z","updatedAt":"2025-02-14T16:18:26.979Z","id":"dzhL8PxGOvRSKz2J","name":"ANCORA IN TEST"}]}