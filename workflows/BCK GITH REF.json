{"createdAt":"2025-02-28T14:45:21.124Z","updatedAt":"2025-02-28T15:03:16.000Z","id":"kvi5yuwKQcJq2Uqn","name":"BCK GITH REF","active":false,"nodes":[{"parameters":{},"id":"5ba6af37-58ab-4343-bfa6-2939d97ed170","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[400,-60],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"b4eed75b-54dc-46ca-af95-8230a80cd1be","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-80,320],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"a607f758-ce26-48be-b117-7b9dab308fc6","name":"n8n","type":"n8n-nodes-base.n8n","position":[800,40],"typeVersion":1,"credentials":{"n8nApi":{"id":"e0P2yj9nA0voMJCS","name":"n8n account"}}},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"ed26a7d6-1f5d-44af-97d9-a1df8d82d1cb","name":"Return","type":"n8n-nodes-base.set","position":[1640,520],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"a59d3c5f-3dbf-4779-9930-4989d0278176","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[600,400],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"664068f5-5a41-43f3-98ea-d8acd10c6ba7","name":"If file too large","type":"n8n-nodes-base.if","position":[360,420],"typeVersion":2},{"parameters":{},"id":"5c10cb0d-3fed-4e19-b7e5-854760b3a4a8","name":"Merge Items","type":"n8n-nodes-base.merge","position":[360,680],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"bffdf8aa-f48e-4747-ad8f-e5847ef26f45","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[560,680],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"63efa095-89b0-4634-a494-608dc2c6bafe","name":"Check Status","type":"n8n-nodes-base.switch","position":[960,680],"typeVersion":1},{"parameters":{},"id":"3fae81c8-d7d0-4b45-bdd8-d2f35eedbde5","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[1180,520],"typeVersion":1},{"parameters":{},"id":"89e8b090-ed86-4706-a512-365cfc9a5050","name":"File is different","type":"n8n-nodes-base.noOp","position":[1180,680],"typeVersion":1},{"parameters":{},"id":"aa8db185-b4fa-4ae5-9497-af6ffadc78b4","name":"File is new","type":"n8n-nodes-base.noOp","position":[1180,880],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"dcd7a849-4185-4e58-b5e7-75c9b8395107","name":"Create new file","type":"n8n-nodes-base.github","position":[1400,880],"typeVersion":1,"credentials":{"githubApi":{"id":"d8Aca1Kz6HhErvT5","name":"GitHub account"}}},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"241770d4-6f43-40e5-a7db-e315a157025c","name":"Edit existing file","type":"n8n-nodes-base.github","position":[1400,680],"typeVersion":1,"credentials":{"githubApi":{"id":"d8Aca1Kz6HhErvT5","name":"GitHub account"}}},{"parameters":{"options":{}},"id":"e1165bf6-272b-4a20-a4ad-729b488ca96d","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1000,40],"typeVersion":3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1,"triggerAtMinute":33}]}},"id":"055c6c33-1f71-4fb5-9b3f-e4ea55e7d943","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[400,140],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"c2047a66-47ef-4bd0-b78a-65b90e77283a","name":"Create sub path","type":"n8n-nodes-base.set","position":[760,680],"typeVersion":3.3},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.","height":417,"width":385,"color":4},"id":"5e4be776-e62d-477e-87f1-fadf1a639104","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-80,-140],"typeVersion":1},{"parameters":{"content":"## Main workflow loop","height":416.1856906618075,"width":1272.6408145680155,"color":7},"id":"bec2ad81-2aed-415f-9c17-020523fd259f","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[360,-140],"typeVersion":1},{"parameters":{"select":"channel","channelId":{"__rl":true,"value":"#backup-n8n","mode":"name"},"text":"=:information_source:  Starting Workflow Backup [{{ $execution.id }}]","otherOptions":{"includeLinkToWorkflow":false}},"id":"75bd2669-580b-4876-aca6-ec7a49740abf","name":"Starting Message","type":"n8n-nodes-base.slack","position":[640,40],"webhookId":"c02eb407-5547-4aa0-9ebf-46dab67b63b6","typeVersion":2.2,"credentials":{"slackApi":{"id":"klJipReYb8IC43HS","name":"Slack account"}}},{"parameters":{"select":"channel","channelId":{"__rl":true,"value":"#backup-n8n","mode":"name"},"text":"=âœ… Backup has completed - {{ $('n8n').all().length }} workflows have been processed.","otherOptions":{}},"id":"757a8674-d687-4035-ae54-b8894e0c193d","name":"Completed Notification","type":"n8n-nodes-base.slack","position":[1220,-120],"webhookId":"a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4","executeOnce":true,"typeVersion":2.2,"credentials":{"slackApi":{"id":"klJipReYb8IC43HS","name":"Slack account"}}},{"parameters":{"select":"channel","channelId":{"__rl":true,"value":"#backup-n8n","mode":"name"},"text":"=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}","otherOptions":{"includeLinkToWorkflow":false}},"id":"9fa223eb-ad45-4049-8b7f-324d4feb071a","name":"Failed Flows","type":"n8n-nodes-base.slack","position":[1420,80],"webhookId":"2a092edb-de12-490f-931b-34d70e7d7696","typeVersion":2.2,"credentials":{"slackApi":{"id":"klJipReYb8IC43HS","name":"Slack account"}}},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"2efa1c32-3437-4fbe-840e-ada724f8413b","name":"Get file data","type":"n8n-nodes-base.github","position":[160,420],"typeVersion":1,"alwaysOutputData":true,"credentials":{"githubApi":{"id":"d8Aca1Kz6HhErvT5","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"={{ $vars.repo_owner }}"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"={{ $vars.repo_name }}"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"={{ $vars.repo_path }}"}]},"includeOtherFields":true,"options":{}},"id":"b40ea38b-fb1b-4f39-8584-7947f50fba9f","name":"Config","type":"n8n-nodes-base.set","position":[-120,540],"typeVersion":3.4},{"parameters":{"workflowId":{"__rl":true,"value":"b2D7IAQ7mK64budS","mode":"list","cachedResultName":"BCK GITH REF SUB"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"mode":"each","options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[1160,60],"id":"56ab593a-0afd-4166-b8ca-cae3a83fde4f","name":"Execute Workflow1","onError":"continueErrorOutput"},{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-360,540],"id":"ffc06a05-87e8-4b4e-805c-e02b1a1c0c99","name":"When Executed by Another Workflow"}],"connections":{"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Config":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Failed Flows":{"main":[[]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Completed Notification","type":"main","index":0}],[{"node":"Execute Workflow1","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Starting Message":{"main":[[{"node":"n8n","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"Execute Workflow1":{"main":[[{"node":"Loop Over Items","type":"main","index":0}],[{"node":"Failed Flows","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Config","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"1cb9ad05-cc5e-4d9b-bd45-e33dcc5edc62","triggerCount":0,"tags":[]}